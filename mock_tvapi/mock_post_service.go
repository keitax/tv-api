// Code generated by MockGen. DO NOT EDIT.
// Source: post_service.go

// Package mock_tvapi is a generated GoMock package.
package mock_tvapi

import (
	gomock "github.com/golang/mock/gomock"
	. "github.com/keitax/tv-api"
	reflect "reflect"
)

// MockPostService is a mock of PostService interface
type MockPostService struct {
	ctrl     *gomock.Controller
	recorder *MockPostServiceMockRecorder
}

// MockPostServiceMockRecorder is the mock recorder for MockPostService
type MockPostServiceMockRecorder struct {
	mock *MockPostService
}

// NewMockPostService creates a new mock instance
func NewMockPostService(ctrl *gomock.Controller) *MockPostService {
	mock := &MockPostService{ctrl: ctrl}
	mock.recorder = &MockPostServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPostService) EXPECT() *MockPostServiceMockRecorder {
	return m.recorder
}

// GetList mocks base method
func (m *MockPostService) GetList(start, results int) ([]*Post, error) {
	ret := m.ctrl.Call(m, "GetList", start, results)
	ret0, _ := ret[0].([]*Post)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetList indicates an expected call of GetList
func (mr *MockPostServiceMockRecorder) GetList(start, results interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetList", reflect.TypeOf((*MockPostService)(nil).GetList), start, results)
}

// GetSingle mocks base method
func (m *MockPostService) GetSingle(id string) (*Post, error) {
	ret := m.ctrl.Call(m, "GetSingle", id)
	ret0, _ := ret[0].(*Post)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSingle indicates an expected call of GetSingle
func (mr *MockPostServiceMockRecorder) GetSingle(id interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSingle", reflect.TypeOf((*MockPostService)(nil).GetSingle), id)
}

// Synchronize mocks base method
func (m *MockPostService) Synchronize() error {
	ret := m.ctrl.Call(m, "Synchronize")
	ret0, _ := ret[0].(error)
	return ret0
}

// Synchronize indicates an expected call of Synchronize
func (mr *MockPostServiceMockRecorder) Synchronize() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Synchronize", reflect.TypeOf((*MockPostService)(nil).Synchronize))
}
