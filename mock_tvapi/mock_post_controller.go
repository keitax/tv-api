// Code generated by MockGen. DO NOT EDIT.
// Source: post_controller.go

// Package mock_tvapi is a generated GoMock package.
package mock_tvapi

import (
	gomock "github.com/golang/mock/gomock"
	. "github.com/keitax/tv-api"
	reflect "reflect"
)

// MockPostController is a mock of PostController interface
type MockPostController struct {
	ctrl     *gomock.Controller
	recorder *MockPostControllerMockRecorder
}

// MockPostControllerMockRecorder is the mock recorder for MockPostController
type MockPostControllerMockRecorder struct {
	mock *MockPostController
}

// NewMockPostController creates a new mock instance
func NewMockPostController(ctrl *gomock.Controller) *MockPostController {
	mock := &MockPostController{ctrl: ctrl}
	mock.recorder = &MockPostControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPostController) EXPECT() *MockPostControllerMockRecorder {
	return m.recorder
}

// GetList mocks base method
func (m *MockPostController) GetList(start, results int) ([]*Post, error) {
	ret := m.ctrl.Call(m, "GetList", start, results)
	ret0, _ := ret[0].([]*Post)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetList indicates an expected call of GetList
func (mr *MockPostControllerMockRecorder) GetList(start, results interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetList", reflect.TypeOf((*MockPostController)(nil).GetList), start, results)
}

// GetSingle mocks base method
func (m *MockPostController) GetSingle(id string) (*Post, error) {
	ret := m.ctrl.Call(m, "GetSingle", id)
	ret0, _ := ret[0].(*Post)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSingle indicates an expected call of GetSingle
func (mr *MockPostControllerMockRecorder) GetSingle(id interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSingle", reflect.TypeOf((*MockPostController)(nil).GetSingle), id)
}

// Synchronize mocks base method
func (m *MockPostController) Synchronize() error {
	ret := m.ctrl.Call(m, "Synchronize")
	ret0, _ := ret[0].(error)
	return ret0
}

// Synchronize indicates an expected call of Synchronize
func (mr *MockPostControllerMockRecorder) Synchronize() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Synchronize", reflect.TypeOf((*MockPostController)(nil).Synchronize))
}
